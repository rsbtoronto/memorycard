{"version":3,"sources":["images/img1.png","images/img2.png","images/img3.png","images/img4.png","images/img5.png","images/img6.png","images/img7.png","images/img9.png","components/Cards.js","components/MemoryCards.js","components/NavBar.js","components/Game.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Cards","img1","img2","img3","img4","img5","img6","img7","img8","MemoryCards","images","handleClick","e","image","target","getAttribute","console","log","switch","push","length","checkName","shift","allPictures","document","getElementsByClassName","reset","i","classList","add","setAttribute","image1","image2","remove","className","sort","Math","random","map","element","key","id","style","background","pic","check","onClick","React","Component","NavBar","this","props","turns","score","Game","state","BeginGame","handleBeginGame","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f6e08491.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/img1.e9be7bf4.png\";","module.exports = __webpack_public_path__ + \"static/media/img2.ec8e775a.png\";","module.exports = __webpack_public_path__ + \"static/media/img3.402cd18c.png\";","module.exports = __webpack_public_path__ + \"static/media/img4.fa61fdd6.png\";","module.exports = __webpack_public_path__ + \"static/media/img5.24bc8582.png\";","module.exports = __webpack_public_path__ + \"static/media/img6.a029a9a6.png\";","module.exports = __webpack_public_path__ + \"static/media/img7.1f640f28.png\";","module.exports = __webpack_public_path__ + \"static/media/img9.6182879d.png\";","import img1 from \"../images/img1.png\"\r\nimport img2 from \"../images/img2.png\"\r\nimport img3 from \"../images/img3.png\"\r\nimport img4 from \"../images/img4.png\"\r\nimport img5 from \"../images/img5.png\"\r\nimport img6 from \"../images/img6.png\"\r\nimport img7 from \"../images/img7.png\"\r\nimport img8 from \"../images/img9.png\"\r\n\r\nexport let Cards = [\r\n    {\r\n      \"id\": 1,\r\n      \"name\": \"image1\",\r\n      \"pic\": img1\r\n    },\r\n    {\r\n      \"id\": 2,\r\n      \"name\": \"image2\",\r\n      \"pic\": img2\r\n    },\r\n    {\r\n      \"id\": 3,\r\n      \"name\": \"image3\",\r\n      \"pic\": img3\r\n    },\r\n    {\r\n      \"id\": 4,\r\n      \"name\": \"image4\",\r\n      \"pic\": img4\r\n    },\r\n    {\r\n      \"id\": 5,\r\n      \"name\": \"image5\",\r\n      \"pic\": img5\r\n    },\r\n    {\r\n      \"id\": 6,\r\n      \"name\": \"image6\",\r\n      \"pic\": img6\r\n    },\r\n    {\r\n      \"id\": 7,\r\n      \"name\": \"image7\",\r\n      \"pic\": img7\r\n    },\r\n    {\r\n      \"id\": 8,\r\n      \"name\": \"image8\",\r\n      \"pic\": img8\r\n    },\r\n    {\r\n      \"id\": 1,\r\n      \"name\": \"image1\",\r\n      \"pic\": img1\r\n    },\r\n    {\r\n      \"id\": 2,\r\n      \"name\": \"image2\",\r\n      \"pic\": img2\r\n    },\r\n    {\r\n      \"id\": 3,\r\n      \"name\": \"image3\",\r\n      \"pic\": img3\r\n    },\r\n    {\r\n      \"id\": 4,\r\n      \"name\": \"image4\",\r\n      \"pic\": img4\r\n    },\r\n    {\r\n      \"id\": 5,\r\n      \"name\": \"image5\",\r\n      \"pic\": img5\r\n    },\r\n    {\r\n      \"id\": 6,\r\n      \"name\": \"image6\",\r\n      \"pic\": img6\r\n    },\r\n    {\r\n      \"id\": 7,\r\n      \"name\": \"image7\",\r\n      \"pic\": img7\r\n    },\r\n    {\r\n      \"id\": 8,\r\n      \"name\": \"image8\",\r\n      \"pic\": img8\r\n    }\r\n];\r\n\r\n","import React from 'react';\r\nimport {Cards} from './Cards';\r\nimport '../css/MemoryCards.css';\r\n\r\nclass MemoryCards extends React.Component {\r\n    images = [];\r\n    handleClick = (e) => {      \r\n      let image = e.target;\r\n  \r\n      if (image.getAttribute(\"check\") === \"match\") {\r\n        return;\r\n      }\r\n      console.log(image, this.images[0]);\r\n  \r\n      if (image !== this.images[0]) {\r\n        this.switch(image);\r\n        this.images.push(image);\r\n      } else {\r\n        this.switch(image);\r\n        this.images = [];\r\n      }\r\n  \r\n      if (this.images.length > 2) {\r\n        if (!this.checkName(this.images[0], this.images[1])) {\r\n          this.switch(this.images[0]);\r\n          this.switch(this.images[1]);\r\n          this.images.shift();\r\n          this.images.shift();\r\n        } else {\r\n          this.images.shift();\r\n          this.images.shift();\r\n        }\r\n      }\r\n      let allPictures = document.getElementsByClassName(\"card-blank\");\r\n      if (allPictures.length < 1) { \r\n        console.log(\"allPictures.length\", allPictures.length);\r\n       // this.props.endGame(true);\r\n        let reset = document.getElementsByClassName(\"card\");\r\n        for (let i = 0; i < reset.length; i++) {\r\n          reset[i].classList.add(\"card-blank\");\r\n          reset[i].setAttribute(\"check\", \"false\");\r\n          this.images = [];\r\n        }\r\n      }\r\n    };\r\n  \r\n    checkName = (image1, image2) => {\r\n      if (image1.getAttribute(\"id\") === image2.getAttribute(\"id\")) {\r\n        image1.setAttribute(\"check\", \"match\");\r\n        image2.setAttribute(\"check\", \"match\");\r\n        return true;\r\n      }\r\n      return false;\r\n    };\r\n  \r\n    switch = (target) => {\r\n      if (target.getAttribute(\"check\") === \"true\") {\r\n        target.setAttribute(\"check\", \"false\");\r\n        target.classList.add(\"card-blank\");\r\n      } else {\r\n        console.log(\"switch else\");\r\n        target.setAttribute(\"check\", \"true\");\r\n        target.classList.remove(\"card-blank\");\r\n      }\r\n    };\r\n    render() {\r\n      return (\r\n        <div className=\"cards\">\r\n          {Cards\r\n            .sort(() => Math.random() - 0.5)\r\n            .map((element) => {\r\n              return (\r\n                <div\r\n                  className=\"card card-blank\"\r\n                 key={Math.random()}\r\n                  id={element.id}\r\n                  style={{ background: `url(${element.pic})` }}\r\n                  check=\"false\"\r\n                  onClick={this.handleClick}\r\n                />\r\n              );\r\n            })}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default MemoryCards;","import React from 'react';\r\nimport '../css/NavBar.css';\r\n\r\n\r\nclass NavBar extends React.Component{\r\n    render(){\r\n        const { turns, score } = this.props;\r\n        \r\n        return(\r\n             <div className=\"navbar\">\r\n                <div className=\"turns\">Turns: {turns}</div>\r\n                <div className=\"score\">Score: {score}</div>\r\n              </div>       \r\n    );\r\n}\r\n}\r\n\r\nexport default NavBar;","import React from \"react\";\r\nimport MemoryCards from \"./MemoryCards\";\r\nimport '../css/Game.css';\r\nimport NavBar from \"./NavBar\";\r\n\r\n\r\nclass Game extends React.Component {\r\n  state = {\r\n   BeginGame: true,\r\n    turns: 0,\r\n    score: 0,\r\n  };\r\n\r\n  \r\n\r\n  render() {\r\n    const { BeginGame, turns, score} = this.state;\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <NavBar turns={turns} score={score} /> \r\n        <div className=\"cards\"><MemoryCards  BeginGame={this.handleBeginGame}/></div>        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React from 'react';\nimport './App.css';\nimport Game from './components/Game';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\"> \n        \n        <div>\n  \n        <Game />\n        \n      </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}